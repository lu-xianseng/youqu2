import{_ as i,c as a,R as e,o as p}from"./chunks/framework.Aqiy0hvI.js";const r=JSON.parse('{"title":"标签自动同步","description":"","frontmatter":{},"headers":[],"relativePath":"指南/特色功能/标签自动同步.md","filePath":"指南/特色功能/标签自动同步.md","lastUpdated":1726024303000}'),n={name:"指南/特色功能/标签自动同步.md"};function t(l,s,h,c,d,o){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="标签自动同步" tabindex="-1">标签自动同步 <a class="header-anchor" href="#标签自动同步" aria-label="Permalink to &quot;标签自动同步&quot;">​</a></h1><h2 id="自动同步脚本-id-到-csv-文件" tabindex="-1">自动同步脚本 ID 到 CSV 文件 <a class="header-anchor" href="#自动同步脚本-id-到-csv-文件" aria-label="Permalink to &quot;自动同步脚本 ID 到 CSV 文件&quot;">​</a></h2><p>支持自动同步脚本 <code>ID</code>（用例 <code>py</code> 文件的 <code>ID</code>）到 <code>CSV</code> 文件；</p><p><strong>【使用方法一】</strong></p><p>配置文件方式，通过一下几个配置来控制：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[csvctl]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;将py文件的case id同步到csv文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;yes, 开启同步</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;no, 关闭同步</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PY_ID_TO_CSV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = yes</span></span></code></pre></div><p>如果不存在 <code>CSV</code> 文件会直接创建一个并写入用例脚本的 <code>ID</code>；</p><p>此功能默认会将 <code>CSV</code> 文件中多余的 <code>ID</code> 行删掉，以处理人工删除了用例脚本文件，但 <code>CSV</code> 文件里面对应的 <code>ID</code> 行未删除的问题；</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> csvctl</span></span></code></pre></div><p><strong>【使用方法二】</strong></p><p>命令行参数的方式：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> csvctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p2c</span></span></code></pre></div><p>不管配置文件是否配置，通过命令行参数的方式执行优先级总是最高的；</p><p>每次操作会将 <code>CSV</code> 文件先备份到 <code>report/pyid2csv_back</code> 目录下；</p><h2 id="从-pms-自动同步标签到-csv" tabindex="-1">从 PMS 自动同步标签到 CSV <a class="header-anchor" href="#从-pms-自动同步标签到-csv" aria-label="Permalink to &quot;从 PMS 自动同步标签到 CSV&quot;">​</a></h2><p>用于自动同步 <code>PMS</code> 用例标签数据至本地 <code>CSV</code> 文件；</p><p><strong>【使用方法一】</strong></p><p>配置文件方式，通过以下几个配置来控制：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">APP_NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这个参数可填可不填，但是填了可以提高用例的执行速度，因为在用例收集阶段可以指定到具体的应用库。（下同）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PMS_USER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PMS的用户名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PMS_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PMS的密码</span></span></code></pre></div><p>在 <code>[pmsctl-pms_link_csv]</code> 节点下指定 <code>CSV</code> 文件名与 <code>PMS</code> 用例模块的对应关系，比如：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[pmsctl-pms_link_csv]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;同步PMS数据到本地CSV文件，必须要配置的配置项</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;key是本地CSV文件的文件名称;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;value是对应PMS上的模块ID;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;比如要同步音乐的数据, 首先需要将配置 APP_NAME = deepin-music，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;CSV文件名称为music.csv，其在PMS上的音乐用例库的URL为: https://pms.uniontech.com/caselib-browse-81.html</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;因此应该配置为: music = 81</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;这样才能将PMS与本地CSV文件建立联系。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;如果你的应用分了很多模块,只需要将对应的信息依次配置好就行了。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">music</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 53</span></span></code></pre></div><p>将以上信息配置好之后，在命令行执行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pmsctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p2c</span></span></code></pre></div><p>每次执行时原 <code>CSV</code> 文件会自动备份在 <code>report</code> 目录下，因此你不用担心脚本执行导致你的数据丢失。</p><p><strong>【使用方法二】</strong></p><p>按照我们一贯的风格，你也可以不去管配置文件，完全通过命令行参数传入：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>youqu manage.py pmsctl -p2c -u ut00xxxx -p you_password -plc music:81</span></span></code></pre></div><p>每次操作会将 <code>CSV</code> 文件先备份到 <code>report/pms2csv_back</code> 目录下；</p>`,28)]))}const g=i(n,[["render",t]]);export{r as __pageData,g as default};
