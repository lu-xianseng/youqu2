import{_ as i}from"./chunks/install.DYY69KT3.js";import{_ as a}from"./chunks/env.CqxpnoXB.js";import{_ as n,c as t,R as l,o as p}from"./chunks/framework.Aqiy0hvI.js";const u=JSON.parse('{"title":"HTTP 接口自动化测试","description":"","frontmatter":{},"headers":[],"relativePath":"实践/HTTP接口自动化测试/初始化项目.md","filePath":"实践/HTTP接口自动化测试/初始化项目.md","lastUpdated":1726024303000}'),e={name:"实践/HTTP接口自动化测试/初始化项目.md"};function h(k,s,r,d,o,c){return p(),t("div",null,s[0]||(s[0]=[l('<h1 id="http-接口自动化测试" tabindex="-1">HTTP 接口自动化测试 <a class="header-anchor" href="#http-接口自动化测试" aria-label="Permalink to &quot;HTTP 接口自动化测试&quot;">​</a></h1><p>HTTP 接口自动化测试是一个传统测试类型，只要有接口请求能力就能做，YouQu 自带网络接口模块 <code>requestx</code> ，它基于标准库 <code>urllib</code> 封装，能满足对大部分的网络接口处理的需求。</p><p>YouQu 框架的很多网络相关功能都是基于此模块实现，但大多数同学喜欢用三方模块 <code>requests</code> 做网络接口，因为用法上更加简洁。</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>安装 YouQu：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span></span></code></pre></div><h2 id="创建一个项目" tabindex="-1">创建一个项目 <a class="header-anchor" href="#创建一个项目" aria-label="Permalink to &quot;创建一个项目&quot;">​</a></h2><p>创建一个项目：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu-startproject</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span></code></pre></div><p><img src="'+i+`" alt=""></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my_project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用于放置APP工程</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conftest.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Pytest 插件库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CURRENT</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 记录YouQu当前的版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # 环境部署</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 执行管理器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pytest.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # pytest.ini配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruff.toml</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ruff(Python最强代码扫描工具)配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setting</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 全局配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 底层src</span></span></code></pre></div><h2 id="部署环境" tabindex="-1">部署环境 <a class="header-anchor" href="#部署环境" aria-label="Permalink to &quot;部署环境&quot;">​</a></h2><p>安装 YouQu 执行环境：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env.sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用的默认密码是 1；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 您可以使用 -p 选项传入密码：bash env.sh -p \${my_password}；</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 也可以修改配置文件 setting/globalconfig.ini 里面的 PASSWORD 配置项；</span></span></code></pre></div><p><img src="`+a+'" alt=""></p>',15)]))}const C=n(e,[["render",h]]);export{u as __pageData,C as default};
