import{_ as e,c as s,R as a,o as i}from"./chunks/framework.Aqiy0hvI.js";const y=JSON.parse('{"title":"WebUI","description":"","frontmatter":{},"headers":[],"relativePath":"指南/特色功能/WebUI.md","filePath":"指南/特色功能/WebUI.md","lastUpdated":1726024303000}'),l={name:"指南/特色功能/WebUI.md"};function n(d,t,r,o,c,p){return i(),s("div",null,t[0]||(t[0]=[a(`<h1 id="webui" tabindex="-1">WebUI <a class="header-anchor" href="#webui" aria-label="Permalink to &quot;WebUI&quot;">​</a></h1><p>YouQu 基于 <code>Playwright</code> 驱动浏览器实现 WebUI 自动化测试。</p><p>市面上耳熟能详的可用于 <code>Web UI</code> 自动化测试工具：<code>Selenium</code>、<code>Cypress</code>、<code>Puppeteer</code>、<code>Playwright</code>；</p><p>咱们先初步排除掉一些明显不用的：</p><ul><li><code>Cypress</code>，只支持 <code>JavaScript</code>，而我们自动化人员大多使用 <code>Python</code> 对 <code>JavaScript</code> 不熟悉，排除。</li><li><code>Puppeteer</code>，只支持谷歌浏览器，格局没打开，官方不支持 <code>Python</code>，排除。</li></ul><p>剩下 <code>Selenium</code>、<code>Playwright</code>，我们从一些方面做对比：</p><table><thead><tr><th style="text-align:left;">对比指标</th><th style="text-align:center;">Selenium</th><th style="text-align:center;">Playwright</th></tr></thead><tbody><tr><td style="text-align:left;">环境安装难度</td><td style="text-align:center;">✗</td><td style="text-align:center;">✔</td></tr><tr><td style="text-align:left;">运行速度</td><td style="text-align:center;">✗</td><td style="text-align:center;">✔</td></tr><tr><td style="text-align:left;">元素等待</td><td style="text-align:center;">✗</td><td style="text-align:center;">✔</td></tr><tr><td style="text-align:left;">智能定位</td><td style="text-align:center;">✗</td><td style="text-align:center;">✔</td></tr><tr><td style="text-align:left;">稳定性</td><td style="text-align:center;">✔</td><td style="text-align:center;">✔</td></tr><tr><td style="text-align:left;">文档</td><td style="text-align:center;">✔</td><td style="text-align:center;">✗</td></tr><tr><td style="text-align:left;">接口测试</td><td style="text-align:center;">✗</td><td style="text-align:center;">✔</td></tr></tbody></table><p>总结：</p><p><code>Playwright</code> 作为一个比较新的工具，在文档方便确实没有老牌的 <code>Selenium</code> 完善，特别是一些示例、方法的使用说明，都还不够好，甚至有些就没有说明，但基本的使用该有的都有。</p><p>除了文档方面，<code>Playwright</code> 几乎在各方面碾压 <code>Selenium</code>，很明显 <code>Playwright</code> 以绝对优势获胜。</p><h2 id="实践方法" tabindex="-1">实践方法 <a class="header-anchor" href="#实践方法" aria-label="Permalink to &quot;实践方法&quot;">​</a></h2><p>参考章节 <a href="https://youqu.uniontech.com/%E5%AE%9E%E8%B7%B5/WebUI%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE.html" target="_blank" rel="noreferrer">【Web UI 自动化测试】</a></p><h2 id="断言方法" tabindex="-1">断言方法 <a class="header-anchor" href="#断言方法" aria-label="Permalink to &quot;断言方法&quot;">​</a></h2><p><code>YouQu</code> 框架统一提供断言语句，以保持统一的断言语句风格。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># src/webui.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WebAssert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">staticmethod</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> assert_locator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        locator: Union[Page, Locator, APIResponse],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ) -&gt; Union[PageAssertions, LocatorAssertions, APIResponseAssertions]:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _expect(locator)</span></span></code></pre></div>`,15)]))}const g=e(l,[["render",n]]);export{y as __pageData,g as default};
