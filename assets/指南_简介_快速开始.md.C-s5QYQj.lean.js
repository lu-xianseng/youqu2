import{_ as i}from"./chunks/install.DYY69KT3.js";import{_ as a,c as n,R as h,o as p}from"./chunks/framework.Aqiy0hvI.js";const c=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"指南/简介/快速开始.md","filePath":"指南/简介/快速开始.md","lastUpdated":1726024303000}'),l={name:"指南/简介/快速开始.md"};function t(k,s,e,F,d,r){return p(),n("div",null,s[0]||(s[0]=[h('<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>从 PyPI 安装:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span></span></code></pre></div><details class="details custom-block"><summary>不加 sudo ?</summary><p>不加 sudo 也可以：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span></span></code></pre></div><p>但可能出现 <code>youqu-startproject</code> 命令无法使用；</p><p>这是因为不加 sudo 时，<code>youqu-startproject</code> 命令会生成在 <code>$HOME/.local/bin</code> 下，</p><p>而此路径可能不在环境变量（<code>PATH</code>）中，因此您需要添加环境变量：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.local/bin</span></span></code></pre></div></details><h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h2><p>您可以在任意目录下，使用 <code>youqu-startproject</code> 命令创建一个项目：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu-startproject</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">注意</p><p>不要以 <code>root</code> 用户执行命令！</p></div><p>如果 <code>youqu-startproject</code> 后面不加参数，默认的项目名称为：<code>youqu</code> ；</p><p><img src="'+i+`" alt=""></p><h2 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h2><p>进入项目根目录：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_project</span></span></code></pre></div><p>安装部署 YouQu 执行所需环境：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-TYYh3" id="tab-y496X9j" checked="checked"><label for="tab-y496X9j">虚拟环境部署</label><input type="radio" name="group-TYYh3" id="tab-gzRy6QQ"><label for="tab-gzRy6QQ">本机环境部署</label></div><div class="blocks"><div class="language-shell vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env.sh</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span></code></pre></div></div></div><details class="details custom-block"><summary>密码问题</summary><p>使用的默认密码是 <code>1</code>；</p><p>您可以使用 <code>-p</code> 选项传入密码：<code>bash env.sh -p \${my_password}</code>；</p><p>也可以修改配置文件 <code>setting/globalconfig.ini</code> 里面的 <code>PASSWORD</code> 配置项；</p></details><h2 id="创建-app-工程" tabindex="-1">创建 APP 工程 <a class="header-anchor" href="#创建-app-工程" aria-label="Permalink to &quot;创建 APP 工程&quot;">​</a></h2><p>使用 <code>startapp</code> 命令自动创建 APP 工程：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> startapp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autotest_deepin_some</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">APP 工程名称命名规范</p><p>APP 工程名称需要符合 Python 文件命名规范（字母、数字、下划线）。</p></div><p>自动创建的 APP 工程遵循完整的 PO 设计模式，让你可以专注于用例和方法的编写维护。</p><p>这样在 <code>apps</code> 目录下会创建一个子项目工程： <code>autotest_deepin_some</code>，同时新建好工程模板目录和模板文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my_project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autotest_deepin_some</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # &lt;----- APP工程</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   .  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> case</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   .  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> assert_res</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例断言所需要的资源</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   .  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base_case.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例基类</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_mycase_001.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例示例 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_mycase_002.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例示例 2</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 应用库配置文件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 读取配置文件config.ini里面的配置，并提供可调用的配置对象config</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conftest.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Pytest Fixture 插件库</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> control</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 记录依赖YouQu的版本</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deepin_some_assert.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 断言方法类</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mycase.csv</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例标签管理文件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> widget</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方法层</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base_widget.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方法基类</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deepin_some_widget.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方法唯一出口类</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> other_widget.py</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 其他方法类</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> other.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 其他应用的基于相对位移元素定位方案的配置文件</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> case_res</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 用例执行所需要的资源</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pic_res</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 图像识别方法所需要的资源</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            │  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> readme</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ui.ini</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 相对位移元素定位方案的配置文件</span></span></code></pre></div><p><strong>在你的远程 Git 仓库中，只需要保存 APP 工程这部分代码即可。</strong></p><p><code>autotest_deepin_some</code> 是你的 APP 工程名称，在此基础上，你可以快速的开始你的 AT 项目，更重要的是确保创建工程的规范性。</p><p><code>apps</code> 目录下可以存在任意多个 APP 工程。</p><h2 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h2><h3 id="_1-执行管理器" tabindex="-1">1. 执行管理器 <a class="header-anchor" href="#_1-执行管理器" aria-label="Permalink to &quot;1. 执行管理器&quot;">​</a></h3><p>在项目根目录下有一个 <code>manage.py</code> ，它是一个执行器入口，提供了本地执行、远程执行等的功能。</p><h3 id="_2-本地执行" tabindex="-1">2. 本地执行 <a class="header-anchor" href="#_2-本地执行" aria-label="Permalink to &quot;2. 本地执行&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span></code></pre></div><h4 id="_2-1-命令行参数" tabindex="-1">2.1. 命令行参数 <a class="header-anchor" href="#_2-1-命令行参数" aria-label="Permalink to &quot;2.1. 命令行参数&quot;">​</a></h4><p>在一些 CI 环境下使用命令行参数会更加方便：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/autotest_deepin_some</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;yyy&quot;</span></span></code></pre></div><p>使用 <code>-h</code> 或 <code>--help</code> 可以查看所有支持的命令行参数：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">optional</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arguments:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -h,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exit</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> APP,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> APP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     应用名称：apps/autotest_deepin_music</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        autotest_deepin_music</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEYWORDS,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keywords</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KEYWORDS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        用例的关键词,支持and/or/not逻辑组合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TAGS,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TAGS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  用例的标签,支持and/or/not逻辑组合</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --rerun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RERUN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         失败重跑次数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --record_failed_case</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RECORD_FAILED_CASE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        失败录屏从第几次失败开始录制视频</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {yes,}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        清理环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --report_formats</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REPORT_FORMATS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        测试报告格式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --max_fail</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MAX_FAIL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   最大失败率</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --log_level</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LOG_LEVEL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        日志输出级别</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TIMEOUT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     单条用例超时时间</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --resolution</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RESOLUTION</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        检查分辨率</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DEBUG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         调试模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --noskip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {yes,}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       csv文件里面标记了skip跳过的用例不生效</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --ifixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {yes,}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       fixed不生效，仅通过skip跳过用例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --send_pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {,async,finish}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        数据回填</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --task_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TASK_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     测试单ID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --trigger</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {,auto,hand}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        触发者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CASE_FILE,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --case_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CASE_FILE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        根据文件执行用例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --deb_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DEB_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   需要安装deb包的本地路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PMS_USER,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pms_user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PMS_USER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 用户名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PMS_PASSWORD,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pms_password</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PMS_PASSWORD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 密码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --suite_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SUITE_ID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 测试套ID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --pms_info_file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PMS_INFO_FILE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 信息文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --top</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             过程中记录top命令中的值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --lastfailed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          仅执行上次失败用例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --duringfail</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          测试过程中立即显示报错</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --repeat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REPEAT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       指定用例执行次数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --project_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PROJECT_NAME</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        工程名称（写入json文件）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --build_location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BUILD_LOCATION</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        构建地区（写入json文件）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LINE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           执行的业务线（写入json文件）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --autostart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AUTOSTART</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        重启类场景开启letmego执行方案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  --slaves</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SLAVES</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       远程测试机</span></span></code></pre></div><h4 id="_2-2-配置文件" tabindex="-1">2.2. 配置文件 <a class="header-anchor" href="#_2-2-配置文件" aria-label="Permalink to &quot;2.2. 配置文件&quot;">​</a></h4><p>通过配置文件配置参数</p><p>在配置文件 <a href="https://github.com/linuxdeepin/youqu/blob/master/setting/globalconfig.ini" target="_blank" rel="noreferrer">setting/globalconfig.ini</a> 里面支持配置对执行的一些参数进行配置，配置完成之后，直接在命令行执行 <code>manage.py</code> 就好了。</p><h3 id="_3-远程执行" tabindex="-1">3. 远程执行 <a class="header-anchor" href="#_3-远程执行" aria-label="Permalink to &quot;3. 远程执行&quot;">​</a></h3><p>远程执行就是用本地作为服务端控制远程机器执行，远程机器执行的用例相同；</p><p>使用 <code>remote</code> 命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span></span></code></pre></div><h4 id="_3-1-远程多机器分布式异步执行" tabindex="-1">3.1. 远程多机器分布式异步执行 <a class="header-anchor" href="#_3-1-远程多机器分布式异步执行" aria-label="Permalink to &quot;3.1. 远程多机器分布式异步执行&quot;">​</a></h4><p><img src="https://pic.imgdb.cn/item/64f6d3c0661c6c8e549f8ca5.png" alt=""></p><p>多机器分布式异步执行就是由本地 YouQu 作为服务端，控制远程 N 台机器执行相同的用例，执行完之后所有测试机的测试结果会返回给服务端 <code>report</code> 目录下；</p><p>远程执行同样通过配置文件 <a href="https://github.com/linuxdeepin/youqu/blob/master/setting/globalconfig.ini" target="_blank" rel="noreferrer">setting/globalconfig.ini</a> 进行用例相关配置；</p><p>然后在命令行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span></span></code></pre></div><p>这样运行是从配置文件去读取相关配置。</p><p>如果你不想通过配置文件，你仍然通过命令行参数进行传参，</p><p>以下为 <code>python3 manage.py remote</code> 提供的一些参数选项：</p><div class="language-coffeescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">coffeescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">help</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            show</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENTS, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENTS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        远程机器的user@ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password,多个机器用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">连接,如果password不传入,默认取sett</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        ing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote.ini中CLIENT_PASSWORD的值,比如</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uos@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        或 uos@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send_code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       发送代码到测试机（不含report目录）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build_env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       搭建测试环境,如果为yes，不管send_code是否为yes都会发送代码到测试机.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENT_PASSWORD, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">client_password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENT_PASSWORD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        测试机密码（全局）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PARALLEL, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parallel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PARALLEL</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                        yes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表示所有测试机并行跑，执行相同的测试用例;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">no</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表示测试机分布式执行，服务端会根据收集到的测试用例自</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        动分配给各个测试机执行。</span></span></code></pre></div><p>除了这些特有参数以外，它同样支持本地执行的所有参数；</p><p>在命令行这样运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/autotest_deepin_music</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uos@10.8.13.x3/uos@10.8.13.x4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span></span></code></pre></div><p>所有用例执行完之后会在 <code>report</code> 目录下回收各个测试机执行的测试报告。</p><p>注意：如果远程机器没有搭建自动化测试环境，记得加上参数 <code>-e</code> ：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span></span></code></pre></div><p>执行前确保远程机器已经开启了 ssh 服务，否则会提示无法连接，如果没有开启，请手动开启：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span></span></code></pre></div><p>配置文件其他相关配置项详细说明，请查看配置文件中的注释内容。</p><h4 id="_3-2-远程多机器分布式异步负载均衡执行" tabindex="-1">3.2. 远程多机器分布式异步负载均衡执行 <a class="header-anchor" href="#_3-2-远程多机器分布式异步负载均衡执行" aria-label="Permalink to &quot;3.2. 远程多机器分布式异步负载均衡执行&quot;">​</a></h4><p>多机器分布式异步负载均衡执行也是用本地作为服务端控制远程机器执行，但远程机器执行的用例不同，而是所有远程机器执行的用例之和，为你想要执行的用例集；</p><p>似乎有点难以理解，我用大白话举例描述下：</p><p>服务端想要执行 10 条用例，现在远程机器有 5 台，然后服务端就先拿着第 1 条用例给远程 1 号机执行，拿第 2 条用例给远程 2 号机执行...，如此循环直到所有用例执行完，这就是负载均衡执行。</p><p><img src="https://pic.imgdb.cn/item/64f6d694661c6c8e54a1025b.png" alt=""></p><p>使用方法和前面一样，只是需要增加一个参数 <code>--parallel</code>：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --parallel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span></code></pre></div>`,71)]))}const o=a(l,[["render",t]]);export{c as __pageData,o as default};
