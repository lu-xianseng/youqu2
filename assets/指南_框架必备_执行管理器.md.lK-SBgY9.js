import{_ as i,c as a,R as h,o as n}from"./chunks/framework.Aqiy0hvI.js";const g=JSON.parse('{"title":"执行管理器 - manage.py","description":"","frontmatter":{},"headers":[],"relativePath":"指南/框架必备/执行管理器.md","filePath":"指南/框架必备/执行管理器.md","lastUpdated":1726024303000}'),p={name:"指南/框架必备/执行管理器.md"};function t(l,s,k,e,d,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="执行管理器-manage-py" tabindex="-1">执行管理器 - manage.py <a class="header-anchor" href="#执行管理器-manage-py" aria-label="Permalink to &quot;执行管理器 - manage.py&quot;">​</a></h1><p><code>YouQu</code> 的执行管理器 <code>manage.py</code> 提供了丰富的配置和命令行参数，可用于本地用例驱动执行、远程用例驱动执行、<code>CSV</code> 文件管理、<code>PMS</code> 与本地 <code>CSV</code> 文件标签关联管理、脚手架等功能；</p><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用&quot;">​</a></h2><p><strong>【命令行使用】</strong></p><p>所有功能的驱动执行都是通过 <code>manage.py</code> 进行的，它是全局的入口文件，后面提到的一些命令行参数也都默认是在 <code>manage.py</code> 之后添加使用；</p><p>你可以使用 <code>-h</code> 或 <code>--help</code> 查看它的帮助：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre></div><p>这样可以查看它支持的子命令；</p><p>然后再通过子命令 <code>-h</code> 或 <code>--help</code> 查看子命令的帮助，以子命令 <code>run</code> 举例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre></div><p>这样可以查看到子命令支持的各项参数及参数使用说明。</p><p><strong>【配置文件】</strong></p><p>配置文件在 <code>setting</code> 目录下，绝大部分的配置项均在 <code>globalconfig.ini</code> 文件中，为了方便描述后面经常提到的“配置文件”、“配置项”几乎都是指的 <a href="https://github.com/linuxdeepin/youqu/blob/master/setting/globalconfig.ini" target="_blank" rel="noreferrer">setting/globalconfig.ini</a> 。</p><p>你可以在配置文件中每一个配置项上面看到该配置项的使用说明；</p><p>在后面的一些功能描述中有些为了方面描述只提到了配置项的使用说明，并没有再补充其对应的命令行参数，但是几乎所有的命令行参数都对应提供了配置文件配置项；</p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>命令行参数的优先级高于配置文件配置，也就是说通过命令行参数指定了对应的参数，配置文件中不管是否配置均不生效。</p></div><p>下面介绍两个常用的用例执行的功能：</p><h2 id="本地执行" tabindex="-1">本地执行 <a class="header-anchor" href="#本地执行" aria-label="Permalink to &quot;本地执行&quot;">​</a></h2><p>本地执行子命令为：<code>run</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span></code></pre></div><h3 id="_1-命令行参数" tabindex="-1">1. 命令行参数 <a class="header-anchor" href="#_1-命令行参数" aria-label="Permalink to &quot;1. 命令行参数&quot;">​</a></h3><p>通过命令行参数配置参数</p><p>以下为 <code>youqu manage.py run</code> 提供的一些常用的参数选项：</p><div class="language-coffeescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">coffeescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">help</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            show</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> APP, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">app</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> APP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     应用名称：apps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autotest_deepin_music</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 或</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        autotest_deepin_music</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KEYWORDS, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keywords</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KEYWORDS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        用例的关键词,支持and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/or/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">not逻辑组合</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TAGS, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tags</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TAGS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  用例的标签,支持and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/or/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">not逻辑组合</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rerun</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RERUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         失败重跑次数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">record_failed_case</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RECORD_FAILED_CASE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        失败录屏从第几次失败开始录制视频</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,}        清理环境</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">report_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> REPORT_FORMATS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        测试报告格式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max_fail</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MAX_FAIL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   最大失败率</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LOG_LEVEL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        日志输出级别</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeout</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TIMEOUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     单条用例超时时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RESOLUTION</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        检查分辨率</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debug</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DEBUG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         调试模式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">noskip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,}       csv文件里面标记了skip跳过的用例不生效</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifixed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,}       fixed不生效，仅通过skip跳过用例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send_pms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,finish}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        数据回填</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">task_id</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TASK_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     测试单ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {,auto,hand}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        触发者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CASE_FILE, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">case_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CASE_FILE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        根据文件执行用例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deb_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DEB_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   需要安装deb包的本地路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">u</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PMS_USER, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pms_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PMS_USER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        pms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 用户名</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PMS_PASSWORD, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pms_password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PMS_PASSWORD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        pms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 密码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">suite_id</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SUITE_ID</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   pms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 测试套ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pms_info_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PMS_INFO_FILE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                        pms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 信息文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">top</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TOP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             过程中记录top命令中的值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lastfailed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          仅执行上次失败用例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">duringfail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          测试过程中立即显示报错</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">repeat</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> REPEAT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       指定用例执行次数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">project_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PROJECT_NAME</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        工程名称（写入json文件）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build_location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BUILD_LOCATION</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        构建地区（写入json文件）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">line</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LINE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           执行的业务线（写入json文件）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autostart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTOSTART</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        重启类场景开启letmego执行方案</span></span></code></pre></div><p>在一些 <code>CI</code> 环境下使用命令行参数会更加方便：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --app</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autotest_deepin_music</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keywords</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span></span></code></pre></div><p><code>--app</code> 入参还支持 <code>apps/autotest_xxx</code> 写法，方便在输入命令的过程中使用补全，下面的远程执行功能同样支持。</p><h3 id="_2-配置文件" tabindex="-1">2. 配置文件 <a class="header-anchor" href="#_2-配置文件" aria-label="Permalink to &quot;2. 配置文件&quot;">​</a></h3><p>通过配置文件配置参数</p><p>在配置文件 <a href="https://github.com/linuxdeepin/youqu/blob/master/setting/globalconfig.ini" target="_blank" rel="noreferrer">setting/globalconfig.ini</a> 里面支持配置对执行的一些参数进行配置；</p><p>配置完成之后，直接在命令行执行 <code>manage.py</code> 就好了。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span></code></pre></div><h2 id="远程执行" tabindex="-1">远程执行 <a class="header-anchor" href="#远程执行" aria-label="Permalink to &quot;远程执行&quot;">​</a></h2><p>远程执行就是用本地作为服务端控制远程机器执行，远程机器执行的用例相同；</p><p>使用 <code>remote</code> 命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span></span></code></pre></div><h3 id="_1-多机器分布式异步执行" tabindex="-1">1. 多机器分布式异步执行 <a class="header-anchor" href="#_1-多机器分布式异步执行" aria-label="Permalink to &quot;1. 多机器分布式异步执行&quot;">​</a></h3><p><img src="https://pic.imgdb.cn/item/64f6d3c0661c6c8e549f8ca5.png" alt=""></p><p>多机器分布式异步执行就是由本地 <code>YouQu</code> 作为服务端，控制远程 N 台机器执行相同的用例，执行完之后所有测试机的测试结果会返回给服务端 report 目录下；</p><p>远程执行同样通过配置文件 <code>setting/globalconfig.ini</code> 进行用例相关配置；</p><p>然后在命令行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span></span></code></pre></div><p>这样运行是从配置文件去读取相关配置。</p><p>如果你不想通过配置文件，你仍然通过命令行参数进行传参，</p><p>以下为 <code>python3 manage.py remote</code> 提供的一些参数选项：</p><div class="language-coffeescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">coffeescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">help</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            show</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exit</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENTS, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENTS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        远程机器的user@ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password,多个机器用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">连接,如果password不传入,默认取sett</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        ing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote.ini中CLIENT_PASSWORD的值,比如</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uos@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        或 uos@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send_code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       发送代码到测试机（不含report目录）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build_env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       搭建测试环境,如果为yes，不管send_code是否为yes都会发送代码到测试机.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENT_PASSWORD, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">client_password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CLIENT_PASSWORD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        测试机密码（全局）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PARALLEL, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parallel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PARALLEL</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                        yes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表示所有测试机并行跑，执行相同的测试用例;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">no</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">表示测试机分布式执行，服务端会根据收集到的测试用例自</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        动分配给各个测试机执行。</span></span></code></pre></div><p>除了这些特有参数以外，它同样支持本地执行的所有参数；</p><p>在命令行这样运行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autotest_deepin_music</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uos@10.8.13.xx/uos@10.8.13.xx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span></span></code></pre></div><p>所有用例执行完之后会在 <code>report</code> 目录下回收各个测试机执行的测试报告。</p><p>注意，如果远程机器没有搭建自动化测试环境，记得加上参数 <code>-e</code> ：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autotest_deepin_music</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uos@10.8.13.xx/uos@10.8.13.xx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span></span></code></pre></div><p>执行前确保远程机器已经开启了 ssh 服务，否则会提示无法连接，如果没有开启，请手动开启：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span></span></code></pre></div><p>配置文件其他相关配置项详细说明，请查看配置文件中的注释内容。</p><h3 id="_2-多机器分布式异步负载均衡执行" tabindex="-1">2. 多机器分布式异步负载均衡执行 <a class="header-anchor" href="#_2-多机器分布式异步负载均衡执行" aria-label="Permalink to &quot;2. 多机器分布式异步负载均衡执行&quot;">​</a></h3><p>多机器分布式异步负载均衡执行也是用本地作为服务端控制远程机器执行，但远程机器执行的用例不同，而是所有远程机器执行的用例之和，为你想要执行的用例集；</p><p>似乎有点难以理解，我用大白话举例描述下：</p><p>服务端想要执行 10 条用例，现在远程机器有 5 台，然后服务端就先拿着第 1 条用例给远程 1 号机执行，拿第 2 条用例给远程 2 号机执行...，如此循环直到所有用例执行完，这就是负载均衡执行。</p><p><img src="https://pic.imgdb.cn/item/64f6d694661c6c8e54a1025b.png" alt=""></p><p>使用方法和前面一样，只是需要增加一个参数 <code>--parallel</code>：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autotest_deepin_music</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uos@10.8.13.xx/uos@10.8.13.xx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --parallel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span></code></pre></div><h2 id="用例驱动方式" tabindex="-1">用例驱动方式 <a class="header-anchor" href="#用例驱动方式" aria-label="Permalink to &quot;用例驱动方式&quot;">​</a></h2><h3 id="指定执行某一个用例" tabindex="-1">指定执行某一个用例 <a class="header-anchor" href="#指定执行某一个用例" aria-label="Permalink to &quot;指定执行某一个用例&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># test_xxx_001.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestCase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_xxx_001_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_xxx_001_2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        ...</span></span></code></pre></div><p>仅驱动执行这一条用例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_xxx_001_1</span></span></code></pre></div><p>如果你想执行这个 py 文件中所有的用例：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_xxx_001</span></span></code></pre></div><h3 id="指定某个目录执行" tabindex="-1">指定某个目录执行 <a class="header-anchor" href="#指定某个目录执行" aria-label="Permalink to &quot;指定某个目录执行&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">autotest_my_app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> case</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base_case.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> __init__.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> smoke</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_mycase_001.py</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_mycase_002.py</span></span></code></pre></div><p>驱动执行 <code>smoke</code> 目录下所有用例：</p><div class="language-shehll vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shehll</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>youqu manage.py run -k smoke</span></span></code></pre></div><h3 id="执行某个app工程的所有用例" tabindex="-1">执行某个APP工程的所有用例 <a class="header-anchor" href="#执行某个app工程的所有用例" aria-label="Permalink to &quot;执行某个APP工程的所有用例&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/autotest_my_app</span></span></code></pre></div><h3 id="根据关键词执行" tabindex="-1">根据关键词执行 <a class="header-anchor" href="#根据关键词执行" aria-label="Permalink to &quot;根据关键词执行&quot;">​</a></h3><p>执行包含关键词的用例,关键词可以是用例对象中的任意字符,且大小写不敏感</p><p>模块名称、py 文件名称、类名、函数名等等都可以做为关键词</p><p>比如：<code>apps/autotest_deepin_music/case/test_music_001.py::TestMusic::test_music_001</code></p><p>整个字符串中可以任意截取字符作为关键词。</p><p>关键词驱动支持<code> and/or/not</code> 表达式。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;music and deepin&quot;</span></span></code></pre></div><h3 id="根据标签执行" tabindex="-1">根据标签执行 <a class="header-anchor" href="#根据标签执行" aria-label="Permalink to &quot;根据标签执行&quot;">​</a></h3><p>基于 YouQu 特有的 CSV 文件管理的标签，也可以是传统的 Pytest 标签：<code>@pytest.mark.L1</code></p><p>标签驱动支持<code> and/or/not</code> 表达式。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;L1 or smoke&quot;</span></span></code></pre></div><h3 id="批量用例id驱动执行" tabindex="-1">批量用例ID驱动执行 <a class="header-anchor" href="#批量用例id驱动执行" aria-label="Permalink to &quot;批量用例ID驱动执行&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;id1 or id2 or id3 or id4&quot;</span></span></code></pre></div><h3 id="测试单驱动执行" tabindex="-1">测试单驱动执行 <a class="header-anchor" href="#测试单驱动执行" aria-label="Permalink to &quot;测试单驱动执行&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/autotest_xxx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ut001234</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_password</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --task_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxxx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --send_pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> async</span></span></code></pre></div><h3 id="测试套件驱动执行" tabindex="-1">测试套件驱动执行 <a class="header-anchor" href="#测试套件驱动执行" aria-label="Permalink to &quot;测试套件驱动执行&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apps/autotest_xxx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ut001234</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_password</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --suit_id</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxxx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --send_pms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> async</span></span></code></pre></div><h3 id="本地用例文件驱动执行" tabindex="-1">本地用例文件驱动执行 <a class="header-anchor" href="#本地用例文件驱动执行" aria-label="Permalink to &quot;本地用例文件驱动执行&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">youqu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> manage.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test_suite.txt</span></span></code></pre></div><p><code>test_suite.txt</code> 中编写用例所在路径：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>apps/autotest_deepin_music/case/test_music_001.py::TestMusic::test_music_001</span></span>
<span class="line"><span>apps/autotest_deepin_music/case/test_music_002.py::TestMusic</span></span>
<span class="line"><span>apps/autotest_deepin_music/case/test_music_003.py</span></span>
<span class="line"><span>apps/autotest_deepin_music/case/test_music_004.py</span></span></code></pre></div>`,96)]))}const y=i(p,[["render",t]]);export{g as __pageData,y as default};
